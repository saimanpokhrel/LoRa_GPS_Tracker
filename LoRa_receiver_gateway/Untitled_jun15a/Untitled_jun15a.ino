#include "arduino_secrets.h"

#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/e2d5130b-7068-4368-ab39-1307bd1005e2 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLocation x;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <SPI.h>
#include <LoRa.h>

#define LORA_SS 5
#define LORA_RST 14
#define LORA_DI0 2 

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
   LoRa.setPins(LORA_SS, LORA_RST, LORA_DI0);

  // Initialize LoRa module
 LoRa.begin(433E6);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  LoRa.setTxPower(18);
  LoRa.setSignalBandwidth(125E3);
  LoRa.setSpreadingFactor(10);
  LoRa.setSyncWord(0xF3);
  LoRa.enableCrc();
}

void loop() {
  ArduinoCloud.update();
  if (LoRa.parsePacket()) {
    // Receive data
    while (LoRa.available()) {
      String receivedData = LoRa.readString();

      int commaIndex = receivedData.indexOf(',');
      if (commaIndex != -1) {
        String latString = receivedData.substring(0, commaIndex);
        String lonString = receivedData.substring(commaIndex + 1);

        float latitude = latString.toFloat();
        float longitude = lonString.toFloat();

        // Set the CloudLocation variable x with the extracted latitude and longitude
       x = Location(latitude,longitude);

        // Report the values to IoT Cloud
        ArduinoCloud.update();

      }
    }
  }
}
